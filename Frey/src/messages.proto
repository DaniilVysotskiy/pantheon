syntax = "proto3";

// Atoms

message AccessRules {
  map<string, RuleValue> rules = 1;
}

message RuleValue {
  oneof kind {
    // Represents a double value.
    int32 number_value = 2;
    // Represents a string value.
    string string_value = 3;
    // Represents a boolean value.
    bool bool_value = 4;
  }
}

message EventAdmin {
  int32 ruleId = 1;
  int32 personId = 2;
  string personName = 3;
}

message RuleListItem {
  string default = 1;
  string type = 2;
  string title = 3;
}

message EventRuleListItem {
  bool isGlobal = 1;
  int32 id = 2;
  RuleValue value = 3;
  string name = 4;
  string ownerTitle = 5;
  repeated string allowedValues = 6;
}

message RuleListItemEx {
  int32 id = 1;
  string type = 2;
  RuleValue value = 3;
  repeated string allowedValues = 4;
}

message RuleListItemExMap {
  map<string, RuleListItemEx> rules = 1;
}

message Person {
  int32 id = 1;
  string city = 2;
  string tenhouId = 3;
  string title = 4;
}

message PersonEx {
  int32 id = 1;
  string city = 2;
  string tenhouId = 3;
  string title = 4;
  string country = 5;
  string email = 6;
  string phone = 7;
  repeated int32 groups = 8;
}

message Group {
  int32 id = 1;
  string title = 2;
  string color = 3;
  string description = 4;
}

// Molecules

message Auth_RequestRegistration_Payload {
  string email = 1;
  string title = 2;
  string password = 3;
}

message Auth_RequestRegistration_Response {
  string approvalCode = 1;
}

message Auth_ApproveRegistration_Payload {
  string approvalCode = 1;
}

message Auth_ApproveRegistration_Response {
  int32 personId = 1;
}

message Auth_Authorize_Payload {
  string email = 1;
  string password = 2;
}

message Auth_Authorize_Response {
  int32 personId = 1;
  string authToken = 2;
}

message Auth_QuickAuthorize_Payload {
  int32 personId = 1;
  string authToken = 2;
}

message Auth_QuickAuthorize_Response {
  bool authSuccess = 1;
}

message Auth_Me_Payload {
  int32 personId = 1;
  string authToken = 2;
}

message Auth_Me_Response {
  int32 personId = 1;
  string country = 2;
  string city = 3;
  string email = 4;
  string phone = 5;
  string tenhouId = 6;
  string title = 7;
  repeated int32 groups = 8;
}

message Auth_ChangePassword_Payload {
  string email = 1;
  string password = 2;
  string newPassword = 3;
}

message Auth_ChangePassword_Response {
  string authToken = 1;
}

message Auth_RequestResetPassword_Payload {
  string email = 1;
}

message Auth_RequestResetPassword_Response {
  string resetToken = 1;
}

message Auth_ApproveResetPassword_Payload {
  string email = 1;
  string resetToken = 2;
}

message Auth_ApproveResetPassword_Response {
  string newTmpPassword = 1;
}

message Access_GetAccessRules_Payload {
  int32 personId = 1;
  int32 eventId = 2;
}

message Access_GetAccessRules_Response {
  AccessRules rules = 1;
}

message Access_GetRuleValue_Payload {
  int32 personId = 1;
  int32 eventId = 2;
  string ruleName = 3;
}

message Access_GetRuleValue_Response {
  RuleValue value = 1;
}

message Access_GetEventAdmins_Payload {
  int32 eventId = 1;
}

message Access_GetEventAdmins_Response {
  repeated EventAdmin admins = 1;
}

message Access_GetSuperadminFlag_Payload {
  int32 personId = 1;
}

message Access_GetSuperadminFlag_Response {
  bool isAdmin = 1;
}

message Access_GetOwnedEventIds_Payload {
  int32 personId = 1;
}

message Access_GetOwnedEventIds_Response {
  repeated int32 eventIds = 1;
}

message Access_GetRulesList_Payload {}

message Access_GetRulesList_Response {
  repeated RuleListItem items = 1;
}

message Access_GetAllEventRules_Payload {
  int32 eventId = 1;
}

message Access_GetAllEventRules_Response {
  repeated EventRuleListItem personRules = 1;
  repeated EventRuleListItem groupRules = 2;
}

message Access_GetPersonAccess_Payload {
  int32 personId = 1;
  int32 eventId = 2;
}

message Access_GetPersonAccess_Response {
  AccessRules rules = 1;
}

message Access_GetGroupAccess_Payload {
  int32 groupId = 1;
  int32 eventId = 2;
}

message Access_GetGroupAccess_Response {
  AccessRules rules = 1;
}

message Access_GetAllPersonAccess_Payload {
  int32 personId = 1;
}

message Access_GetAllPersonAccess_Response {
  map<int32, RuleListItemExMap> rulesByEvent = 1;
}

message Access_GetAllGroupAccess_Payload {
  int32 groupId = 1;
}

message Access_GetAllGroupAccess_Response {
  map<int32, RuleListItemExMap> rulesByEvent = 1;
}

message Access_AddRuleForPerson_Payload {
  string ruleName = 1;
  RuleValue ruleValue = 2;
  string ruleType = 3;
  int32 personId = 4;
  int32 eventId = 5;
}

message Access_AddRuleForPerson_Response {
  int32 ruleId = 1;
}

message Access_AddRuleForGroup_Payload {
  string ruleName = 1;
  RuleValue ruleValue = 2;
  string ruleType = 3;
  int32 groupId = 4;
  int32 eventId = 5;
}

message Access_AddRuleForGroup_Response {
  int32 ruleId = 1;
}

message Access_UpdateRuleForPerson_Payload {
  int32 ruleId = 1;
  RuleValue ruleValue = 2;
  string ruleType = 3;
}

message Access_UpdateRuleForPerson_Response {
  bool success = 1;
}

message Access_UpdateRuleForGroup_Payload {
  int32 ruleId = 1;
  RuleValue ruleValue = 2;
  string ruleType = 3;
}

message Access_UpdateRuleForGroup_Response {
  bool success = 1;
}

message Access_DeleteRuleForPerson_Payload {
  int32 ruleId = 1;
}

message Access_DeleteRuleForPerson_Response {
  bool success = 1;
}

message Access_DeleteRuleForGroup_Payload {
  int32 ruleId = 1;
}

message Access_DeleteRuleForGroup_Response {
  bool success = 1;
}

message Access_ClearAccessCache_Payload {
  int32 personId = 1;
  int32 eventId = 2;
}

message Access_ClearAccessCache_Response {
  bool success = 1;
}

message Access_AddSystemWideRuleForPerson_Payload {
  string ruleName = 1;
  RuleValue ruleValue = 2;
  string ruleType = 3;
  int32 personId = 4;
}

message Access_AddSystemWideRuleForPerson_Response {
  int32 ruleId = 1;
}

message Access_AddSystemWideRuleForGroup_Payload {
  string ruleName = 1;
  RuleValue ruleValue = 2;
  string ruleType = 3;
  int32 groupId = 4;
}

message Access_AddSystemWideRuleForGroup_Response {
  int32 ruleId = 1;
}

message Persons_CreateAccount_Payload {
  string email = 1;
  string password = 2;
  string title = 3;
  string city = 4;
  string phone = 5;
  string tenhouId = 6;
}

message Persons_CreateAccount_Response {
  int32 personId = 1;
}

message Persons_CreateGroup_Payload {
  string title = 1;
  string description = 2;
  string color = 3;
}

message Persons_CreateGroup_Response {
  int32 groupId = 1;
}

message Persons_UpdateGroup_Payload {
  int32 groupId = 1;
  string title = 2;
  string description = 3;
  string color = 4;
}

message Persons_UpdateGroup_Response {
  bool success = 1;
}

message Persons_DeleteGroup_Payload {
  int32 groupId = 1;
}

message Persons_DeleteGroup_Response {
  bool success = 1;
}

message Persons_AddPersonToGroup_Payload {
  int32 personId = 1;
  int32 groupId = 2;
}

message Persons_AddPersonToGroup_Response {
  bool success = 1;
}

message Persons_RemovePersonFromGroup_Payload {
  int32 personId = 1;
  int32 groupId = 2;
}

message Persons_RemovePersonFromGroup_Response {
  bool success = 1;
}

message Persons_GetPersonsOfGroup_Payload {
  int32 groupId = 1;
}

message Persons_GetPersonsOfGroup_Response {
  repeated Person persons = 1;
}

message Persons_GetGroupsOfPerson_Payload {
  int32 personId = 1;
}

message Persons_GetGroupsOfPerson_Response {
  repeated Group groups = 1;
}

message Persons_UpdatePersonalInfo_Payload {
  int32 id = 1;
  string title = 2;
  string country = 3;
  string city = 4;
  string email = 5;
  string phone = 6;
  string tenhouId = 7;
}

message Persons_UpdatePersonalInfo_Response {
  bool success = 1;
}

message Persons_GetPersonalInfo_Payload {
  repeated int32 ids = 1;
}

message Persons_GetPersonalInfo_Response {
  repeated PersonEx persons = 1;
}

message Persons_FindByTenhouIds_Payload {
  repeated string ids = 1;
}

message Persons_FindByTenhouIds_Response {
  repeated PersonEx persons = 1;
}

message Persons_FindByTitle_Payload {
  string query = 1;
}

message Persons_FindByTitle_Response {
  repeated Person persons = 1;
}

message Persons_GetGroups_Payload {
  repeated int32 ids = 1;
}

message Persons_GetGroups_Response {
  repeated Group groups = 1;
}
